name: Quality Check

on:
  pull_request:
    branches: ["main", "test"]
  push:
    branches: ["main", "test"]

jobs:
  backend-quality:
    name: Backend Quality (Spring Boot)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('backend/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build & Run Tests
        working-directory: ./backend
        run: |
          mvn clean test -Dmaven.test.failure.ignore=true

          # Count total and failed tests from surefire-reports
          total=$(grep -o "<testcase" target/surefire-reports/*.xml | wc -l)
          failed=$(grep -o "<failure" target/surefire-reports/*.xml | wc -l)
          passed=$((total - failed))

          echo "Total tests: $total, Passed: $passed, Failed: $failed"

          # Set status based on proportion
          if [ "$passed" -ge "$((total*2/3))" ]; then
            echo "All good ✅"
          elif [ "$passed" -ge "$((total/2))" ]; then
            echo "::warning::Some tests failed ⚠️"
          else
            echo "::error::Too many tests failed ❌"
            exit 1
          fi

      - name: Show Surefire Reports
        if: failure()
        working-directory: ./backend
        run: cat target/surefire-reports/*.txt || echo "No report found"

  frontend-quality:
    name: Frontend Quality (React)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        working-directory: ./frontend
        run: npm install

      - name: Run Lint
        working-directory: ./frontend
        run: npm run lint || echo "::warning::Lint failed ⚠️"

      - name: Run Frontend Tests
        working-directory: ./frontend
        run: |
          npm test -- --ci --reporters=jest-junit || true

          # Parse Jest test summary JSON
          summary=$(npx jest --json --outputFile=jest-summary.json || true)
          total=$(jq '.numTotalTests' jest-summary.json)
          failed=$(jq '.numFailedTests' jest-summary.json)
          passed=$((total - failed))

          echo "Total tests: $total, Passed: $passed, Failed: $failed"

          if [ "$passed" -ge "$((total*2/3))" ]; then
            echo "All good ✅"
          elif [ "$passed" -ge "$((total/2))" ]; then
            echo "::warning::Some frontend tests failed ⚠️"
          else
            echo "::error::Too many frontend tests failed ❌"
            exit 1
          fi
